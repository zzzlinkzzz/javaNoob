package practice;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class progression {
	
	// function input array:
	public static ArrayList<Integer> input(String fileName) {
		ArrayList<Integer> numArr =new ArrayList<>();
		Scanner scan = null;
		int n;
		
		try {
			scan = new Scanner(new File(fileName));
			n = Integer.parseInt(scan.nextLine());
			
			for (int i = 0; i < n; i++) {
				int num = scan.nextInt();
				numArr.add(num);
			}
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return numArr;
	}
	
	//function print array:
	public static void print(ArrayList<Integer> numArr){
		for (int s: numArr)
			System.out.print(s + " ");
		System.out.println();
	}
	
	//function kiem tra cap so cong:
	public static boolean checkAritProg(ArrayList<Integer> numArr){
		/*
		 * lay x[n-1] tru x[0] sau do chia cho n-1; return check kieu double
		 * neu (double)check == (int(check) => day cap so cong
		 */
		int len = numArr.size();
		double check1 = (numArr.get(len-1) - numArr.get(0))/(len-1);
		if (check1 == (int)check1){
			return true;
		}
		return false;
	}
	
	//function kiem tra cap so nhan:
	public static boolean checkGeoProg(ArrayList<Integer> numArr){
		/*
		 * khai can bac n-1 gia tri cuoi cung cua day; return check kieu double
		 * neu (double)check == (int)check => return true
		 */
		int len = numArr.size();
		double check2 = Math.pow(numArr.get(len-1),1/(len-1));
		if (check2 == (int)check2){
			return true;
		}
		return false;
	}
	
	//function kiem tra day dan dau:
	public static boolean checkLeibniz(ArrayList<Integer> numArr)
	{
		int i = 0;
		boolean check = true;
		
		do {
			if (i+1 == numArr.size()) {
				break;
			}
			check = numArr.get(i)*numArr.get(i+1) < 0;
			i++;
		} while (check);
		return check;
	}
	
	//function kiem tra day tang:
	public static boolean checkAscArr(ArrayList<Integer> numArr){

		int i = 0;
		boolean check = true;
		
		do {
			if (i+1 == numArr.size()) {
				break;
			}
			check = numArr.get(i) < numArr.get(i+1);
			i++;
		} while (check);
		
		return check;
	}
	
	//function kiem tra day doi xung:
	public static boolean checkSymm(ArrayList<Integer> numArr) {
		/*
		 * gia tri check ban dau = true
		 * kiem tra tu 0 - phan nguyen cua n/2:
		 * neu gia x[i] <> x[n-i] => check = false then break
		 * 
		 * return check
		 */
		boolean check = true;
		int n = numArr.size();
		
		for (int i = 0; i <= (int)(n/2);i++ ) {
			if (numArr.get(i) != numArr.get(n-i)) {
				check = false;
				break;
			}
		}
		
		return check;
	}
	
	public static void main(String[] args){
		Scanner inputFilename = new Scanner(System.in);
		System.out.println("nhap ten file: ");
		String fileName = inputFilename.nextLine() + ".txt";
		inputFilename.close();
		
		ArrayList<Integer> numArr = input(fileName);
		
		System.out.println("kiem tra tinh chat cap so cong:");
		if (checkAritProg(numArr)) {
			System.out.println("day so la cap so cong!");
		} else {
			System.out.println("khong phai cap so cong!");
		}
		System.out.println();
		
		System.out.println("kiem tra tinh chat cap so nhan:");
		if (checkGeoProg(numArr)) {
			System.out.println("day so la cap so nhan!");
		} else {
			System.out.println("khong phai cap so nhan!");
		}
		System.out.println();
		
		System.out.println("kiem tra day tang:");
		if (checkAscArr(numArr)) {
			System.out.println("day so la day tang!");
		} else {
			System.out.println("khong phai day tang!");
		}
		System.out.println();
		
		System.out.println("kiem tra day dan dau:");
		if (checkLeibniz(numArr)) {
			System.out.println("day so la day dan dau!");
		} else {
			System.out.println("khong phai day dan dau!");
		}
		System.out.println();
		
		System.out.println("kiem tra day doi xung:");
		if (checkSymm(numArr)) {
			System.out.println("day so la day doi xung!");
		} else {
			System.out.println("khong phai day doi xung!");
		}
		System.out.println();
	}
}
